#!/usr/bin/env bash
function clean {
  rm -f ./*.pem
  rm -f ./*.p12
  rm -f ./*.cer
  rm -f ./index*
  rm -f ./serial*
}

function generate {
  echo 01 > serial
  touch index.txt
  openssl req -x509 -config openssl.cnf -newkey rsa:2048 -days 40000 -out cacert.pem -outform PEM -subj /CN=TestCA/ -nodes
  openssl x509 -in cacert.pem -out cacert.cer -outform DER
  openssl genrsa -out server_key.pem 2048
  openssl req -new -key server_key.pem -out server_req.pem -outform PEM -subj /CN=$(hostname)/O=server/ -nodes
  openssl ca -create_serial -config openssl.cnf -in server_req.pem -out server_cert.pem -notext -batch -extensions server_ca_extensions
  openssl pkcs12 -export -out server_keycert.p12 -in server_cert.pem -inkey server_key.pem -passout pass:DemoPass
  openssl genrsa -out client_key.pem 2048
  openssl req -new -key client_key.pem -out client_req.pem -outform PEM -subj /CN=$(hostname)/O=client/ -nodes
  openssl ca -config openssl.cnf -in client_req.pem -out client_cert.pem -notext -batch -extensions client_ca_extensions
  openssl pkcs12 -export -out client_keycert.p12 -in client_cert.pem -inkey client_key.pem -passout pass:DemoPass
}

cd <%= @dir %>
if [ "$1" = "generate" ]; then
  echo "Generating ssl certificates..."
  generate
  exit
elif [ "$1" = "clean" ]; then
  echo "Cleaning up previously generated certificates..."
  clean
else
  echo "You must run the script with either generate or clean, e.g. ./ssl_certs.sh generate"
fi
